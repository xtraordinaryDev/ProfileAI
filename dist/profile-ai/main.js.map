{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.routes.ts","./src/app/components/chat/chat.component.ts","./src/app/components/chat/chat.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/profile/profile.component.ts","./src/app/guards/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/chat.service.ts","./src/app/services/profile.service.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [RouterOutlet, CommonModule],\r\n  template: `\r\n    <div class=\"app-container\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .app-container {\r\n      min-height: 100vh;\r\n      background: linear-gradient(135deg, #E0E0E0 0%, #F5F5F5 50%, #E0E0E0 100%);\r\n    }\r\n  `]\r\n})\r\nexport class AppComponent {\r\n  title = 'ProFile AI';\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ChatComponent } from './components/chat/chat.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'chat', component: ChatComponent, canActivate: [AuthGuard] },\r\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\r\n  { path: '**', redirectTo: '/login' }\r\n];\r\n","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ChatService, Message } from '../../services/chat.service';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  templateUrl: './chat.component.html',\r\n  styleUrl: './chat.component.scss'\r\n})\r\nexport class ChatComponent implements OnInit, OnDestroy {\r\n  @ViewChild('messagesContainer') messagesContainer!: ElementRef;\r\n  @ViewChild('messageInput') messageInput!: ElementRef;\r\n  \r\n  messages: Message[] = [];\r\n  messageText = '';\r\n  isTyping = false;\r\n  private messagesSubscription?: Subscription;\r\n\r\n  constructor(\r\n    private chatService: ChatService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.messagesSubscription = this.chatService.messages$.subscribe(messages => {\r\n      this.messages = messages;\r\n      setTimeout(() => this.scrollToBottom(), 100);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.messagesSubscription) {\r\n      this.messagesSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  sendMessage(): void {\r\n    if (this.messageText.trim() && !this.isTyping) {\r\n      const message = this.messageText.trim();\r\n      this.messageText = '';\r\n      this.adjustTextareaHeight();\r\n      \r\n      this.chatService.sendMessage(message);\r\n      this.isTyping = true;\r\n      \r\n      // Stop typing indicator after a delay\r\n      setTimeout(() => {\r\n        this.isTyping = false;\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  onEnterKey(event: Event): void {\r\n    const keyboardEvent = event as KeyboardEvent;\r\n    if (keyboardEvent.key === 'Enter' && !keyboardEvent.shiftKey) {\r\n      event.preventDefault();\r\n      this.sendMessage();\r\n    }\r\n  }\r\n\r\n  adjustTextareaHeight(): void {\r\n    if (this.messageInput?.nativeElement) {\r\n      const textarea = this.messageInput.nativeElement;\r\n      textarea.style.height = 'auto';\r\n      textarea.style.height = Math.min(textarea.scrollHeight, 120) + 'px';\r\n    }\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    if (this.messagesContainer) {\r\n      const element = this.messagesContainer.nativeElement;\r\n      element.scrollTop = element.scrollHeight;\r\n    }\r\n  }\r\n\r\n  goToProfile(): void {\r\n    this.router.navigate(['/profile']);\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","<div class=\"chat-container\">\r\n  <!-- Header -->\r\n  <header class=\"chat-header\">\r\n    <div class=\"header-left\">\r\n      <div class=\"logo\">\r\n        <img src=\"assets/images/ProfileAILogoTransparent.png\" alt=\"ProFile AI\" class=\"logo-image\">\r\n        <div class=\"logo-text\">\r\n          ProFile<span class=\"ai\">AI</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"header-right\">\r\n      <button class=\"btn btn-secondary\" (click)=\"goToProfile()\">\r\n        View Profile\r\n      </button>\r\n      <button class=\"btn btn-secondary\" (click)=\"logout()\">\r\n        Logout\r\n      </button>\r\n    </div>\r\n  </header>\r\n\r\n  <!-- Chat Area -->\r\n  <div class=\"chat-area\">\r\n    <div class=\"messages-container\" #messagesContainer>\r\n      <div \r\n        *ngFor=\"let message of messages\" \r\n        class=\"message\"\r\n        [class.user-message]=\"message.isUser\"\r\n        [class.ai-message]=\"!message.isUser\"\r\n      >\r\n        <div class=\"message-avatar\" *ngIf=\"!message.isUser\">\r\n          <div class=\"avatar-icon\">AI</div>\r\n        </div>\r\n        <div class=\"message-content\">\r\n          <div class=\"message-text\">{{ message.text }}</div>\r\n          <div class=\"message-time\">\r\n            {{ message.timestamp | date:'short' }}\r\n          </div>\r\n        </div>\r\n        <div class=\"message-avatar\" *ngIf=\"message.isUser\">\r\n          <div class=\"avatar-icon user\">U</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div *ngIf=\"isTyping\" class=\"message ai-message typing\">\r\n        <div class=\"message-avatar\">\r\n          <div class=\"avatar-icon\">AI</div>\r\n        </div>\r\n        <div class=\"message-content\">\r\n          <div class=\"typing-indicator\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Input Area -->\r\n  <div class=\"input-area\">\r\n    <form (ngSubmit)=\"sendMessage()\" #messageForm=\"ngForm\">\r\n      <div class=\"input-container\">\r\n        <textarea\r\n          [(ngModel)]=\"messageText\"\r\n          name=\"messageText\"\r\n          placeholder=\"Ask me anything about building your profile...\"\r\n          rows=\"1\"\r\n          #messageInput\r\n          (keydown.enter)=\"onEnterKey($event)\"\r\n          (input)=\"adjustTextareaHeight()\"\r\n        ></textarea>\r\n        <button \r\n          type=\"submit\" \r\n          class=\"send-button\"\r\n          [disabled]=\"!messageText.trim() || isTyping\"\r\n        >\r\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n            <path d=\"M22 2L11 13\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n            <path d=\"M22 2L15 22L11 13L2 9L22 2Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.scss'\r\n})\r\nexport class LoginComponent {\r\n  email = '';\r\n  password = '';\r\n  isLoading = false;\r\n  showSignup = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  onSubmit(): void {\r\n    if (this.email && this.password) {\r\n      this.isLoading = true;\r\n      \r\n      // Simulate API call delay\r\n      setTimeout(() => {\r\n        const success = this.authService.login(this.email, this.password);\r\n        this.isLoading = false;\r\n        \r\n        if (success) {\r\n          this.router.navigate(['/chat']);\r\n        } else {\r\n          alert('Invalid credentials. Please try again.');\r\n        }\r\n      }, 1500);\r\n    }\r\n  }\r\n\r\n  demoLogin(): void {\r\n    this.email = 'demo@profileai.com';\r\n    this.password = 'demo123';\r\n    this.onSubmit();\r\n  }\r\n}\r\n","<div class=\"login-container\">\r\n  <div class=\"login-card\">\r\n    <div class=\"logo\">\r\n      <img src=\"assets/images/ProfileAILogoTransparent.png\" alt=\"ProFile AI\" class=\"logo-image\">\r\n      <div class=\"logo-text\">\r\n        ProFile<span class=\"ai\">AI</span>\r\n      </div>\r\n    </div>\r\n    \r\n    <h2>Welcome Back</h2>\r\n    <p class=\"subtitle\">Sign in to continue building your AI-powered profile</p>\r\n    \r\n    <form (ngSubmit)=\"onSubmit()\" #loginForm=\"ngForm\">\r\n      <div class=\"input-group\">\r\n        <label for=\"email\">Email Address</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          [(ngModel)]=\"email\"\r\n          required\r\n          email\r\n          #emailInput=\"ngModel\"\r\n          placeholder=\"Enter your email\"\r\n        >\r\n        <div *ngIf=\"emailInput.invalid && emailInput.touched\" class=\"error-message\">\r\n          Please enter a valid email address\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"input-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          [(ngModel)]=\"password\"\r\n          required\r\n          minlength=\"6\"\r\n          #passwordInput=\"ngModel\"\r\n          placeholder=\"Enter your password\"\r\n        >\r\n        <div *ngIf=\"passwordInput.invalid && passwordInput.touched\" class=\"error-message\">\r\n          Password must be at least 6 characters\r\n        </div>\r\n      </div>\r\n      \r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-primary full-width\"\r\n        [disabled]=\"loginForm.invalid || isLoading\"\r\n      >\r\n        <span *ngIf=\"!isLoading\">Sign In</span>\r\n        <span *ngIf=\"isLoading\">Signing In...</span>\r\n      </button>\r\n    </form>\r\n    \r\n    <div class=\"divider\">\r\n      <span>or</span>\r\n    </div>\r\n    \r\n    <button class=\"btn btn-secondary full-width\" (click)=\"demoLogin()\">\r\n      Try Demo Account\r\n    </button>\r\n    \r\n    <p class=\"signup-link\">\r\n      Don't have an account? \r\n      <a href=\"#\" (click)=\"showSignup = true; $event.preventDefault()\">Sign up here</a>\r\n    </p>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ProfileService, UserProfile, Experience, Education } from '../../services/profile.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  template: `\r\n    <div class=\"profile-container\">\r\n      <!-- Header -->\r\n      <header class=\"profile-header\">\r\n        <div class=\"header-left\">\r\n          <div class=\"logo\">\r\n            <img src=\"assets/images/ProfileAILogoTransparent.png\" alt=\"ProFile AI\" class=\"logo-image\">\r\n            <div class=\"logo-text\">\r\n              ProFile<span class=\"ai\">AI</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"header-right\">\r\n          <button class=\"btn btn-secondary\" (click)=\"goToChat()\">\r\n            Back to Chat\r\n          </button>\r\n          <button class=\"btn btn-secondary\" (click)=\"logout()\">\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <!-- Profile Content -->\r\n      <div class=\"profile-content\">\r\n        <div class=\"profile-sidebar\">\r\n          <div class=\"profile-card\">\r\n            <div class=\"profile-avatar\">\r\n              <div class=\"avatar-icon\">{{ getInitials() }}</div>\r\n            </div>\r\n            <h3>{{ profile?.name || 'Your Name' }}</h3>\r\n            <p class=\"profile-title\">{{ profile?.title || 'Your Title' }}</p>\r\n            <p class=\"profile-email\">{{ profile?.email || 'your.email@example.com' }}</p>\r\n            \r\n            <div class=\"profile-actions\">\r\n              <button class=\"btn btn-primary\" (click)=\"editMode = !editMode\">\r\n                {{ editMode ? 'Save Changes' : 'Edit Profile' }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"profile-main\">\r\n          <!-- Basic Information -->\r\n          <div class=\"card\">\r\n            <h2>Basic Information</h2>\r\n            <div class=\"form-grid\">\r\n              <div class=\"input-group\">\r\n                <label>Full Name</label>\r\n                <input \r\n                  [(ngModel)]=\"profileForm.name\" \r\n                  [readonly]=\"!editMode\"\r\n                  placeholder=\"Enter your full name\"\r\n                >\r\n              </div>\r\n              <div class=\"input-group\">\r\n                <label>Professional Title</label>\r\n                <input \r\n                  [(ngModel)]=\"profileForm.title\" \r\n                  [readonly]=\"!editMode\"\r\n                  placeholder=\"e.g., Software Engineer, Marketing Manager\"\r\n                >\r\n              </div>\r\n              <div class=\"input-group full-width\">\r\n                <label>Professional Summary</label>\r\n                <textarea \r\n                  [(ngModel)]=\"profileForm.summary\" \r\n                  [readonly]=\"!editMode\"\r\n                  rows=\"4\"\r\n                  placeholder=\"Write a brief summary of your professional background and goals...\"\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Skills -->\r\n          <div class=\"card\">\r\n            <h2>Skills</h2>\r\n            <div class=\"skills-container\">\r\n              <div class=\"skills-list\">\r\n                <span \r\n                  *ngFor=\"let skill of profileForm.skills\" \r\n                  class=\"skill-tag\"\r\n                >\r\n                  {{ skill }}\r\n                  <button \r\n                    *ngIf=\"editMode\" \r\n                    class=\"remove-skill\" \r\n                    (click)=\"removeSkill(skill)\"\r\n                  >×</button>\r\n                </span>\r\n              </div>\r\n              <div *ngIf=\"editMode\" class=\"add-skill\">\r\n                <input \r\n                  [(ngModel)]=\"newSkill\" \r\n                  placeholder=\"Add a skill\"\r\n                  (keydown.enter)=\"addSkill()\"\r\n                >\r\n                <button class=\"btn btn-primary\" (click)=\"addSkill()\">Add</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Experience -->\r\n          <div class=\"card\">\r\n            <h2>Work Experience</h2>\r\n            <div class=\"experience-list\">\r\n              <div \r\n                *ngFor=\"let exp of profileForm.experience; let i = index\" \r\n                class=\"experience-item\"\r\n              >\r\n                <div class=\"experience-content\">\r\n                  <h4>{{ exp.position }}</h4>\r\n                  <p class=\"company\">{{ exp.company }}</p>\r\n                  <p class=\"duration\">{{ exp.duration }}</p>\r\n                  <p class=\"description\">{{ exp.description }}</p>\r\n                </div>\r\n                <button \r\n                  *ngIf=\"editMode\" \r\n                  class=\"remove-item\" \r\n                  (click)=\"removeExperience(i)\"\r\n                >×</button>\r\n              </div>\r\n            </div>\r\n            <button \r\n              *ngIf=\"editMode\" \r\n              class=\"btn btn-secondary\" \r\n              (click)=\"addExperience()\"\r\n            >\r\n              Add Experience\r\n            </button>\r\n          </div>\r\n\r\n          <!-- Education -->\r\n          <div class=\"card\">\r\n            <h2>Education</h2>\r\n            <div class=\"education-list\">\r\n              <div \r\n                *ngFor=\"let edu of profileForm.education; let i = index\" \r\n                class=\"education-item\"\r\n              >\r\n                <div class=\"education-content\">\r\n                  <h4>{{ edu.degree }}</h4>\r\n                  <p class=\"institution\">{{ edu.institution }}</p>\r\n                  <p class=\"year\">{{ edu.year }}</p>\r\n                </div>\r\n                <button \r\n                  *ngIf=\"editMode\" \r\n                  class=\"remove-item\" \r\n                  (click)=\"removeEducation(i)\"\r\n                >×</button>\r\n              </div>\r\n            </div>\r\n            <button \r\n              *ngIf=\"editMode\" \r\n              class=\"btn btn-secondary\" \r\n              (click)=\"addEducation()\"\r\n            >\r\n              Add Education\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .profile-container {\r\n      min-height: 100vh;\r\n      background: #f8f9fa;\r\n    }\r\n    \r\n    .profile-header {\r\n      background: white;\r\n      border-bottom: 1px solid var(--border-light);\r\n      padding: 16px 24px;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      box-shadow: 0 2px 10px rgba(26, 58, 107, 0.05);\r\n    }\r\n    \r\n    .header-left .logo {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 12px;\r\n    }\r\n    \r\n    .logo-image {\r\n      width: 40px;\r\n      height: 40px;\r\n      object-fit: contain;\r\n      filter: drop-shadow(0 2px 4px rgba(26, 58, 107, 0.2));\r\n      transition: transform 0.3s ease;\r\n    }\r\n    \r\n    .logo-image:hover {\r\n      transform: scale(1.05);\r\n    }\r\n    \r\n    .logo-text {\r\n      font-size: 20px;\r\n      font-weight: 600;\r\n      color: var(--primary-dark);\r\n    }\r\n    \r\n    .logo-text .ai {\r\n      color: var(--primary-bright);\r\n      margin-left: 4px;\r\n    }\r\n    \r\n    .header-right {\r\n      display: flex;\r\n      gap: 12px;\r\n    }\r\n    \r\n    .btn {\r\n      padding: 8px 16px;\r\n      border: none;\r\n      border-radius: 8px;\r\n      font-weight: 500;\r\n      cursor: pointer;\r\n      transition: all 0.3s ease;\r\n      font-size: 14px;\r\n      text-decoration: none;\r\n      display: inline-block;\r\n    }\r\n    \r\n    .btn-primary {\r\n      background: linear-gradient(135deg, var(--primary-dark) 0%, var(--primary-bright) 100%);\r\n      color: white;\r\n    }\r\n    \r\n    .btn-primary:hover {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 8px 25px var(--shadow);\r\n    }\r\n    \r\n    .btn-secondary {\r\n      background: white;\r\n      color: var(--primary-dark);\r\n      border: 1px solid var(--primary-dark);\r\n    }\r\n    \r\n    .btn-secondary:hover {\r\n      background: var(--primary-dark);\r\n      color: white;\r\n    }\r\n    \r\n    .profile-content {\r\n      display: grid;\r\n      grid-template-columns: 300px 1fr;\r\n      gap: 24px;\r\n      padding: 24px;\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n    }\r\n    \r\n    .profile-sidebar {\r\n      position: sticky;\r\n      top: 24px;\r\n      height: fit-content;\r\n    }\r\n    \r\n    .profile-card {\r\n      background: white;\r\n      border-radius: 16px;\r\n      padding: 24px;\r\n      text-align: center;\r\n      box-shadow: 0 4px 20px var(--shadow);\r\n    }\r\n    \r\n    .profile-avatar {\r\n      margin-bottom: 16px;\r\n    }\r\n    \r\n    .avatar-icon {\r\n      width: 80px;\r\n      height: 80px;\r\n      border-radius: 50%;\r\n      background: linear-gradient(135deg, var(--primary-dark) 0%, var(--primary-bright) 100%);\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      color: white;\r\n      font-weight: 700;\r\n      font-size: 24px;\r\n      margin: 0 auto;\r\n    }\r\n    \r\n    .profile-card h3 {\r\n      color: var(--primary-dark);\r\n      margin-bottom: 8px;\r\n      font-size: 20px;\r\n    }\r\n    \r\n    .profile-title {\r\n      color: var(--primary-bright);\r\n      font-weight: 500;\r\n      margin-bottom: 8px;\r\n    }\r\n    \r\n    .profile-email {\r\n      color: var(--text-light);\r\n      font-size: 14px;\r\n      margin-bottom: 20px;\r\n    }\r\n    \r\n    .profile-actions {\r\n      margin-top: 20px;\r\n    }\r\n    \r\n    .profile-main {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 24px;\r\n    }\r\n    \r\n    .card {\r\n      background: white;\r\n      border-radius: 16px;\r\n      padding: 24px;\r\n      box-shadow: 0 4px 20px var(--shadow);\r\n    }\r\n    \r\n    .card h2 {\r\n      color: var(--primary-dark);\r\n      margin-bottom: 20px;\r\n      font-size: 18px;\r\n      font-weight: 600;\r\n    }\r\n    \r\n    .form-grid {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n      gap: 20px;\r\n    }\r\n    \r\n    .full-width {\r\n      grid-column: 1 / -1;\r\n    }\r\n    \r\n    .input-group {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    \r\n    .input-group label {\r\n      font-weight: 500;\r\n      color: var(--text-dark);\r\n      margin-bottom: 8px;\r\n      font-size: 14px;\r\n    }\r\n    \r\n    .input-group input,\r\n    .input-group textarea {\r\n      padding: 12px 16px;\r\n      border: 2px solid var(--border-light);\r\n      border-radius: 8px;\r\n      font-size: 14px;\r\n      transition: border-color 0.3s ease;\r\n      font-family: inherit;\r\n    }\r\n    \r\n    .input-group input:focus,\r\n    .input-group textarea:focus {\r\n      outline: none;\r\n      border-color: var(--primary-bright);\r\n    }\r\n    \r\n    .input-group input[readonly],\r\n    .input-group textarea[readonly] {\r\n      background: #f8f9fa;\r\n      cursor: default;\r\n    }\r\n    \r\n    .skills-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 16px;\r\n    }\r\n    \r\n    .skills-list {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      gap: 8px;\r\n    }\r\n    \r\n    .skill-tag {\r\n      background: linear-gradient(135deg, var(--primary-dark) 0%, var(--primary-bright) 100%);\r\n      color: white;\r\n      padding: 6px 12px;\r\n      border-radius: 20px;\r\n      font-size: 12px;\r\n      font-weight: 500;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 6px;\r\n    }\r\n    \r\n    .remove-skill {\r\n      background: none;\r\n      border: none;\r\n      color: white;\r\n      cursor: pointer;\r\n      font-size: 16px;\r\n      line-height: 1;\r\n      padding: 0;\r\n      width: 16px;\r\n      height: 16px;\r\n      border-radius: 50%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n    \r\n    .remove-skill:hover {\r\n      background: rgba(255, 255, 255, 0.2);\r\n    }\r\n    \r\n    .add-skill {\r\n      display: flex;\r\n      gap: 8px;\r\n      align-items: center;\r\n    }\r\n    \r\n    .add-skill input {\r\n      flex: 1;\r\n      padding: 8px 12px;\r\n      border: 2px solid var(--border-light);\r\n      border-radius: 20px;\r\n      font-size: 12px;\r\n    }\r\n    \r\n    .add-skill .btn {\r\n      padding: 8px 16px;\r\n      font-size: 12px;\r\n    }\r\n    \r\n    .experience-list,\r\n    .education-list {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 16px;\r\n      margin-bottom: 16px;\r\n    }\r\n    \r\n    .experience-item,\r\n    .education-item {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: flex-start;\r\n      padding: 16px;\r\n      background: #f8f9fa;\r\n      border-radius: 8px;\r\n      border-left: 4px solid var(--primary-bright);\r\n    }\r\n    \r\n    .experience-content h4,\r\n    .education-content h4 {\r\n      color: var(--primary-dark);\r\n      margin-bottom: 4px;\r\n      font-size: 16px;\r\n    }\r\n    \r\n    .company,\r\n    .institution {\r\n      color: var(--primary-bright);\r\n      font-weight: 500;\r\n      margin-bottom: 4px;\r\n    }\r\n    \r\n    .duration,\r\n    .year {\r\n      color: var(--text-light);\r\n      font-size: 12px;\r\n      margin-bottom: 8px;\r\n    }\r\n    \r\n    .description {\r\n      color: var(--text-dark);\r\n      font-size: 14px;\r\n      line-height: 1.4;\r\n    }\r\n    \r\n    .remove-item {\r\n      background: #e74c3c;\r\n      color: white;\r\n      border: none;\r\n      border-radius: 50%;\r\n      width: 24px;\r\n      height: 24px;\r\n      cursor: pointer;\r\n      font-size: 16px;\r\n      line-height: 1;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n    \r\n    .remove-item:hover {\r\n      background: #c0392b;\r\n    }\r\n    \r\n    @media (max-width: 1024px) {\r\n      .profile-content {\r\n        grid-template-columns: 1fr;\r\n        gap: 16px;\r\n        padding: 16px;\r\n      }\r\n      \r\n      .profile-sidebar {\r\n        position: static;\r\n      }\r\n      \r\n      .form-grid {\r\n        grid-template-columns: 1fr;\r\n      }\r\n    }\r\n    \r\n    @media (max-width: 768px) {\r\n      .profile-header {\r\n        padding: 12px 16px;\r\n      }\r\n      \r\n      .header-right {\r\n        gap: 8px;\r\n      }\r\n      \r\n      .btn {\r\n        padding: 6px 12px;\r\n        font-size: 12px;\r\n      }\r\n      \r\n      .card {\r\n        padding: 16px;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class ProfileComponent implements OnInit, OnDestroy {\r\n  profile: UserProfile | null = null;\r\n  profileForm: Partial<UserProfile> = {\r\n    name: '',\r\n    title: '',\r\n    summary: '',\r\n    skills: [],\r\n    experience: [],\r\n    education: []\r\n  };\r\n  editMode = false;\r\n  newSkill = '';\r\n  private profileSubscription?: Subscription;\r\n\r\n  constructor(\r\n    private profileService: ProfileService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.profileSubscription = this.profileService.profile$.subscribe(profile => {\r\n      this.profile = profile;\r\n      if (profile) {\r\n        this.profileForm = { ...profile };\r\n      } else {\r\n        // Initialize with user email if no profile exists\r\n        const email = this.authService.getCurrentUser();\r\n        this.profileForm = {\r\n          name: '',\r\n          title: '',\r\n          summary: '',\r\n          email: email || '',\r\n          skills: [],\r\n          experience: [],\r\n          education: [],\r\n          contact: {\r\n            email: email || ''\r\n          }\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.profileSubscription) {\r\n      this.profileSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getInitials(): string {\r\n    if (this.profileForm.name) {\r\n      return this.profileForm.name\r\n        .split(' ')\r\n        .map(n => n[0])\r\n        .join('')\r\n        .toUpperCase()\r\n        .slice(0, 2);\r\n    }\r\n    return 'U';\r\n  }\r\n\r\n  addSkill(): void {\r\n    if (this.newSkill.trim() && !this.profileForm.skills?.includes(this.newSkill.trim())) {\r\n      this.profileForm.skills = [...(this.profileForm.skills || []), this.newSkill.trim()];\r\n      this.newSkill = '';\r\n    }\r\n  }\r\n\r\n  removeSkill(skill: string): void {\r\n    this.profileForm.skills = this.profileForm.skills?.filter(s => s !== skill) || [];\r\n  }\r\n\r\n  addExperience(): void {\r\n    const newExp: Experience = {\r\n      id: Date.now().toString(),\r\n      company: '',\r\n      position: '',\r\n      duration: '',\r\n      description: ''\r\n    };\r\n    this.profileForm.experience = [...(this.profileForm.experience || []), newExp];\r\n  }\r\n\r\n  removeExperience(index: number): void {\r\n    this.profileForm.experience = this.profileForm.experience?.filter((_, i) => i !== index) || [];\r\n  }\r\n\r\n  addEducation(): void {\r\n    const newEdu: Education = {\r\n      id: Date.now().toString(),\r\n      institution: '',\r\n      degree: '',\r\n      year: ''\r\n    };\r\n    this.profileForm.education = [...(this.profileForm.education || []), newEdu];\r\n  }\r\n\r\n  removeEducation(index: number): void {\r\n    this.profileForm.education = this.profileForm.education?.filter((_, i) => i !== index) || [];\r\n  }\r\n\r\n  saveProfile(): void {\r\n    if (this.profileForm) {\r\n      this.profileService.updateProfile(this.profileForm);\r\n      this.editMode = false;\r\n    }\r\n  }\r\n\r\n  goToChat(): void {\r\n    this.router.navigate(['/chat']);\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.authService.isAuthenticated()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private isLoggedInSubject = new BehaviorSubject<boolean>(false);\r\n  public isLoggedIn$ = this.isLoggedInSubject.asObservable();\r\n\r\n  constructor() {\r\n    // Check if user is already logged in (from localStorage)\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      this.isLoggedInSubject.next(true);\r\n    }\r\n  }\r\n\r\n  login(email: string, password: string): boolean {\r\n    // Simple mock authentication - in real app, this would call an API\r\n    if (email && password) {\r\n      const token = 'mock-jwt-token-' + Date.now();\r\n      localStorage.setItem('authToken', token);\r\n      localStorage.setItem('userEmail', email);\r\n      this.isLoggedInSubject.next(true);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('userEmail');\r\n    this.isLoggedInSubject.next(false);\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return this.isLoggedInSubject.value;\r\n  }\r\n\r\n  getCurrentUser(): string | null {\r\n    return localStorage.getItem('userEmail');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport interface Message {\r\n  id: string;\r\n  text: string;\r\n  isUser: boolean;\r\n  timestamp: Date;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n  private messagesSubject = new BehaviorSubject<Message[]>([]);\r\n  public messages$ = this.messagesSubject.asObservable();\r\n\r\n  constructor() {\r\n    // Initialize with welcome message\r\n    this.addMessage('Hello! I\\'m ProFile AI. I can help you build your professional profile. What would you like to know about yourself?', false);\r\n  }\r\n\r\n  addMessage(text: string, isUser: boolean): void {\r\n    const message: Message = {\r\n      id: Date.now().toString(),\r\n      text,\r\n      isUser,\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    const currentMessages = this.messagesSubject.value;\r\n    this.messagesSubject.next([...currentMessages, message]);\r\n  }\r\n\r\n  sendMessage(text: string): void {\r\n    this.addMessage(text, true);\r\n    \r\n    // Simulate AI response (in real app, this would call an API)\r\n    setTimeout(() => {\r\n      const responses = [\r\n        \"That's interesting! Tell me more about your experience in that area.\",\r\n        \"I can help you highlight that skill in your profile. What specific achievements do you have?\",\r\n        \"Great! Let me help you structure that information for your professional profile.\",\r\n        \"I understand. Can you provide more details about your background?\",\r\n        \"That's a valuable skill! How long have you been working with that technology?\",\r\n        \"I can help you create a compelling summary of your experience. What are your main strengths?\",\r\n        \"Excellent! Let's work on presenting that in a way that stands out to employers.\",\r\n        \"I'd love to learn more about your career goals and how I can help you achieve them.\"\r\n      ];\r\n      \r\n      const randomResponse = responses[Math.floor(Math.random() * responses.length)];\r\n      this.addMessage(randomResponse, false);\r\n    }, 1000 + Math.random() * 2000); // Random delay between 1-3 seconds\r\n  }\r\n\r\n  clearMessages(): void {\r\n    this.messagesSubject.next([]);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport interface UserProfile {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  title: string;\r\n  summary: string;\r\n  skills: string[];\r\n  experience: Experience[];\r\n  education: Education[];\r\n  contact: ContactInfo;\r\n}\r\n\r\nexport interface Experience {\r\n  id: string;\r\n  company: string;\r\n  position: string;\r\n  duration: string;\r\n  description: string;\r\n}\r\n\r\nexport interface Education {\r\n  id: string;\r\n  institution: string;\r\n  degree: string;\r\n  year: string;\r\n}\r\n\r\nexport interface ContactInfo {\r\n  email: string;\r\n  phone?: string;\r\n  location?: string;\r\n  linkedin?: string;\r\n  github?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n  private profileSubject = new BehaviorSubject<UserProfile | null>(null);\r\n  public profile$ = this.profileSubject.asObservable();\r\n\r\n  constructor() {\r\n    // Load profile from localStorage if exists\r\n    const savedProfile = localStorage.getItem('userProfile');\r\n    if (savedProfile) {\r\n      this.profileSubject.next(JSON.parse(savedProfile));\r\n    }\r\n  }\r\n\r\n  updateProfile(profile: Partial<UserProfile>): void {\r\n    const currentProfile = this.profileSubject.value;\r\n    const updatedProfile = { ...currentProfile, ...profile } as UserProfile;\r\n    this.profileSubject.next(updatedProfile);\r\n    localStorage.setItem('userProfile', JSON.stringify(updatedProfile));\r\n  }\r\n\r\n  addExperience(experience: Omit<Experience, 'id'>): void {\r\n    const currentProfile = this.profileSubject.value;\r\n    if (currentProfile) {\r\n      const newExperience: Experience = {\r\n        ...experience,\r\n        id: Date.now().toString()\r\n      };\r\n      const updatedProfile = {\r\n        ...currentProfile,\r\n        experience: [...currentProfile.experience, newExperience]\r\n      };\r\n      this.updateProfile(updatedProfile);\r\n    }\r\n  }\r\n\r\n  addEducation(education: Omit<Education, 'id'>): void {\r\n    const currentProfile = this.profileSubject.value;\r\n    if (currentProfile) {\r\n      const newEducation: Education = {\r\n        ...education,\r\n        id: Date.now().toString()\r\n      };\r\n      const updatedProfile = {\r\n        ...currentProfile,\r\n        education: [...currentProfile.education, newEducation]\r\n      };\r\n      this.updateProfile(updatedProfile);\r\n    }\r\n  }\r\n\r\n  addSkill(skill: string): void {\r\n    const currentProfile = this.profileSubject.value;\r\n    if (currentProfile && !currentProfile.skills.includes(skill)) {\r\n      const updatedProfile = {\r\n        ...currentProfile,\r\n        skills: [...currentProfile.skills, skill]\r\n      };\r\n      this.updateProfile(updatedProfile);\r\n    }\r\n  }\r\n\r\n  removeSkill(skill: string): void {\r\n    const currentProfile = this.profileSubject.value;\r\n    if (currentProfile) {\r\n      const updatedProfile = {\r\n        ...currentProfile,\r\n        skills: currentProfile.skills.filter(s => s !== skill)\r\n      };\r\n      this.updateProfile(updatedProfile);\r\n    }\r\n  }\r\n\r\n  getProfile(): UserProfile | null {\r\n    return this.profileSubject.value;\r\n  }\r\n}\r\n","import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { AppComponent } from './app/app.component';\r\nimport { provideRouter } from '@angular/router';\r\nimport { routes } from './app/app.routes';\r\nimport { provideAnimations } from '@angular/platform-browser/animations';\r\n\r\nbootstrapApplication(AppComponent, {\r\n  providers: [\r\n    provideRouter(routes),\r\n    provideAnimations()\r\n  ]\r\n}).catch(err => console.error(err));\r\n"],"names":["RouterOutlet","CommonModule","AppComponent","constructor","title","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","styles","LoginComponent","ChatComponent","ProfileComponent","AuthGuard","routes","path","redirectTo","pathMatch","component","canActivate","FormsModule","ɵɵtext","ɵɵtemplate","ChatComponent_div_17_div_1_Template","ChatComponent_div_17_div_8_Template","ɵɵclassProp","message_r2","isUser","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","text","ɵɵtextInterpolate1","ɵɵpipeBind2","timestamp","chatService","authService","router","messages","messageText","isTyping","ngOnInit","messagesSubscription","messages$","subscribe","setTimeout","scrollToBottom","ngOnDestroy","unsubscribe","sendMessage","trim","message","adjustTextareaHeight","onEnterKey","event","keyboardEvent","key","shiftKey","preventDefault","messageInput","nativeElement","textarea","style","height","Math","min","scrollHeight","messagesContainer","element","scrollTop","goToProfile","navigate","logout","ɵɵdirectiveInject","i1","ChatService","i2","AuthService","i3","Router","viewQuery","ChatComponent_Query","ɵɵlistener","ChatComponent_Template_button_click_10_listener","ɵɵrestoreView","_r1","ɵɵresetView","ChatComponent_Template_button_click_12_listener","ChatComponent_div_17_Template","ChatComponent_div_18_Template","ChatComponent_Template_form_ngSubmit_20_listener","ɵɵtwoWayListener","ChatComponent_Template_textarea_ngModelChange_23_listener","$event","ɵɵtwoWayBindingSet","ChatComponent_Template_textarea_keydown_enter_23_listener","ChatComponent_Template_textarea_input_23_listener","ɵɵtwoWayProperty","i4","NgForOf","NgIf","DatePipe","i5","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","NgModel","NgForm","email","password","isLoading","showSignup","onSubmit","success","login","alert","demoLogin","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_12_listener","LoginComponent_Template_input_ngModelChange_17_listener","LoginComponent_div_19_Template","LoginComponent_Template_input_ngModelChange_23_listener","LoginComponent_div_25_Template","LoginComponent_span_27_Template","LoginComponent_span_28_Template","LoginComponent_Template_button_click_32_listener","LoginComponent_Template_a_click_36_listener","emailInput_r3","invalid","touched","passwordInput_r4","loginForm_r2","RequiredValidator","MinLengthValidator","EmailValidator","ProfileComponent_span_51_button_2_Template_button_click_0_listener","skill_r2","ɵɵnextContext","$implicit","ctx_r2","removeSkill","ProfileComponent_span_51_button_2_Template","editMode","ProfileComponent_div_52_Template_input_ngModelChange_1_listener","_r4","newSkill","ProfileComponent_div_52_Template_input_keydown_enter_1_listener","addSkill","ProfileComponent_div_52_Template_button_click_2_listener","ProfileComponent_div_57_button_10_Template_button_click_0_listener","_r5","i_r6","index","removeExperience","ProfileComponent_div_57_button_10_Template","exp_r7","position","company","duration","description","ProfileComponent_button_58_Template_button_click_0_listener","_r8","addExperience","ProfileComponent_div_63_button_8_Template_button_click_0_listener","_r9","i_r10","removeEducation","ProfileComponent_div_63_button_8_Template","edu_r11","degree","institution","year","ProfileComponent_button_64_Template_button_click_0_listener","_r12","addEducation","profileService","profile","profileForm","name","summary","skills","experience","education","profileSubscription","profile$","getCurrentUser","contact","getInitials","split","map","n","join","toUpperCase","slice","includes","skill","filter","s","newExp","id","Date","now","toString","_","i","newEdu","saveProfile","updateProfile","goToChat","ProfileService","ProfileComponent_Template","ProfileComponent_Template_button_click_10_listener","ProfileComponent_Template_button_click_12_listener","ProfileComponent_Template_button_click_27_listener","ProfileComponent_Template_input_ngModelChange_37_listener","ProfileComponent_Template_input_ngModelChange_41_listener","ProfileComponent_Template_textarea_ngModelChange_45_listener","ProfileComponent_span_51_Template","ProfileComponent_div_52_Template","ProfileComponent_div_57_Template","ProfileComponent_button_58_Template","ProfileComponent_div_63_Template","ProfileComponent_button_64_Template","isAuthenticated","ɵɵinject","factory","ɵfac","providedIn","BehaviorSubject","isLoggedInSubject","isLoggedIn$","asObservable","token","localStorage","getItem","next","setItem","removeItem","value","messagesSubject","addMessage","currentMessages","responses","randomResponse","floor","random","length","clearMessages","profileSubject","savedProfile","JSON","parse","currentProfile","updatedProfile","stringify","newExperience","newEducation","getProfile","bootstrapApplication","provideRouter","provideAnimations","providers","catch","err","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}